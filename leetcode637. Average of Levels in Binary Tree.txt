from collections import deque
class Solution:
    def averageOfLevels(self, root):
        res = []
        q = deque([(root, 0)])
        while q:
            a, i = q.popleft()
            res.append([a.val, i])
            if a.left:
                q.append([a.left, i+1])
            if a.right:
                q.append([a.right, i+1])
        s =  [[]  for row in range(res[-1][1]+1)]
        for k in res:
            s[k[1]].append(k[0])
        return [sum(a)/len(a) for a in s]
###在层序遍历的时候进行计算
from collections import deque
class Solution:
    def averageOfLevels(self, root):
        q = [root]
        n = []
        res = []
        while q:
            count = len(q)
            summ = 0
            n = []
            for x in q:
                summ += x.val
                if x.left:
                    n.append(x.left)
                if x.right:
                    n.append(x.right)
            res.append(summ/count)
            q = n
        return res