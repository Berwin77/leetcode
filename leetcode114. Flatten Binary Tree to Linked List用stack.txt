# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def preorder(self, node):
        if not node:
            return 
        self.s.append(node)
        self.preorder(node.left)
        self.preorder(node.right)
        
    def flatten(self, root):
        """
        :type root: TreeNode
        :rtype: void Do not return anything, modify root in-place instead.
        """
        self.s = []
        self.preorder(root)
        i = 0
        while i < len(self.s):
            self.s[i].left = None
            if i+1 < len(self.s):
                self.s[i].right = self.s[i+1]
            elif i+1==len(self.s):
                self.s[i].right = None
            i += 1