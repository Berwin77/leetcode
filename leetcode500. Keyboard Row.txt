class Solution:
    def t_same(self, s, d):
        if s[0] in d:
            for i in range(1, len(s)):
                if s[i] not in d:
                    return False
            return True
        else:
            return False
    def findWords(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        d1 = 'qwertyuiop'
        d2 = 'asdfghjkl'
        d3 = 'zxcvbnm'
        res = []
        for s in words:
            signal = 0
            s1 = s.lower()
            if self.t_same(s1, d1) or self.t_same(s1, d2) or self.t_same(s1, d3):
                res.append(s)
        return res
##标准
class Solution:
    def findWords(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        l = []
        for i in words:
            if Solution.filter(i):
                l.append(i)
            else:
                continue
        return l

    def filter(words):
        l1 = ["q","w","e","r","t","y","u","i","o","p"]
        l2 = ["a","s","d","f","g","h","j","k","l"]
        l3 = ["z","x","c","v","b","n","m"]
        f1 = 0
        f2 = 0
        f3 = 0
        words = words.lower()
        for i in words:
            if i in l1:
                f1 = 1
            elif i in l2:
                f2 = 1
            elif i in l3:
                f3 = 1
        if f1 + f2 + f3 == 1:
            return True