class Solution:
    def binary_search(self, sortl1,target):
        if target>sortl1[-1] or target<sortl1[0]:
            return False
        
        
        mid = len(sortl1)//2
        if target == sortl1[mid]:
            return True
        elif target < sortl1[mid]:
            return self.binary_search(sortl1[0:mid], target)
        else:
            return self.binary_search(sortl1[mid+1:], target)
a = Solution()
print(a.binary_search([1,2,4,5], 3))


第一种只能判断 元素是否存在于数组中， 不能显示 具体的下表位置

所以出现第二种：

class Solution:
    def binary_search(self, sortl1,begin, end, target):
        if begin > end:
            return False
        
        
        mid = (begin+end)//2
        if target == sortl1[mid]:
            return True
        elif target < sortl1[mid]:
            return self.binary_search(sortl1,begin, mid-1, target)
        else:
            return self.binary_search(sortl1,mid+1, end, target)
a = Solution()
c = [1,2,4,5]
print(a.binary_search(c,0, len(c)-1, 2))