G = {7:{}, 0:{1:28,5:10}, 1:{0:28, 2:16, 6:14}, 2:{1:16, 3:12}, 3:{2:12, 4:22, 6:18},4:{3:22, 5:25, 6:24}, 5:{0:10, 4:25}, 6:{1:14, 3:18, 4:24}}
import heapq
def prim(G):
        n = len(G)
        v = 0
        s = {v}
        
        res = []
        for l in range(n-1):
            edges = []
            #print(l)
            for u, w in G[v].items():
                heapq.heappush(edges, (w, v, u))
            
            while edges:
                k, p, q = heapq.heappop(edges)
                if q not in s:
                    s.add(q)
                    res.append(((p, q), k))
                    v = q
                    #print('---------', q)
                    break
            else:
                raise Exception('not connected graph')
        return res
print(prim(G))
print(sum([x[1] for x in prim(G)]))