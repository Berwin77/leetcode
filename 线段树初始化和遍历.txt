class SegmentTree(object):
    def __init__(self, nums, start=None, end=None):
        ###一个线段树包含五个初始值  
        ### self.left 数组起始  self.right 数组结束  相当于包含nums[self.left, self.right+1]中的值
        ### self.val 该节点的值
        ### self.left_son 该节点的左子节点    self.right_son 该节点的右子节点
        n = len(nums)
        if start == None:
            self.left, self.right = 0, n-1
        else:
            self.left, self.right = start, end
        self.mid = (self.left + self.right)/2
        self.left_son, self.right_son = None, None
        self.val = 0
        if self.left > self.right:
            return 
        if self.left == self.right:
            self.val = nums[self.left]
        else:
            self.left_son = SegmentTree(nums, self.left, self.mid)
            self.right_son = SegmentTree(nums, self.mid+1, self.right)
            self.val = self.left_son.val + self.right_son.val
    def print_tree(self):###前序遍历线段树
        print('[%s,(%s,%s)]'%( self.val, self.left, self.right))
        if self.left_son:
            self.left_son.print_tree()
        if self.right_son:
            self.right_son.print_tree()
a = SegmentTree([0,1,2,3,4,5],0, 5)
a.print_tree()